package backtracking;

class GraphColoring{

    static boolean CanColor(int graph[][], int arr[], int color, int vertex){

        for(int i=0;i<graph.length;i++){
            if(graph[vertex][i]==1){
                if(arr[i]==color){
                    return false;
                }
            }
        }

        return true;

    }
    static boolean  colorTheGraph(int graph[][], int arr[], int n, int vertex){

        if(vertex==graph.length){
            return true;
        }


        for(int i=1;i<=n;i++){
            if(CanColor(graph, arr, i, vertex)){
                arr[vertex]=i;
                if(colorTheGraph(graph, arr, n, vertex+1)){
                 return true;   
                }
                else{
                    arr[vertex]=0;
                }
            }
        }
        return false;
    }
    public static void main(String[] args) {
        int n=3;
        int graph[][]={ {0,1,1,0,0},
                        {1,0,0,1,0},
                        {1,0,0,0,1},
                        {0,1,0,0,1},
                        {0,0,1,1,0}};

        int arr[]=new int[graph.length];

        colorTheGraph(graph, arr, n, 0);

        for(int i=0;i<arr.length;i++){
            System.out.println(i+" == >  "+ arr[i]);
        }
    }
}
